@page "/config/contracts"
@using Radzen.Blazor.Rendering;
@using SharedService;
@inject Blazored.LocalStorage.ILocalStorageService localStorage
<PageTitle>Contracts</PageTitle>

<h2>Contracts</h2>    
<NodeView.Components.MinimalHeader />
<br/>
<div class="card border-primary">
  <div class="card-header  ">
    <div class="row no-gutters">
      <div class="col">
        Network Contract Overview
        </div>
    </div>
  </div>
  <div class="card-body p-0">
    <div class="row">
      <div class="col"> 


<RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="20" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
    Data="@contractAddresses" TItem="ContractAddress" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or">
    <Columns>       
        <RadzenDataGridColumn TItem="ContractAddress" Property="name" Title="Name" Width="160px" />
        <RadzenDataGridColumn TItem="ContractAddress" Property="address" Title="Address" Width="300px" />
    </Columns>
</RadzenDataGrid>  

      </div>
    </div>
  </div>
</div>

@code {
    private List<ContractAddress>? contractAddresses = null;
    protected override async Task OnInitializedAsync()
    {                
        var resolver = new Resolver(localStorage);
        
        try {
            contractAddresses = await resolver.GetAllContractAddresses();
        }
        catch (Exception ex) {
            Console.WriteLine(ex.Message);
        }
        
    }
}