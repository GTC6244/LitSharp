@page "/nodes/runningmetrics"
@inject Services.Metrics.Poller poller
@using Services.Metrics;

<PageTitle>Raw Metrics</PageTitle>
<h2>RealTime Raw Metrics</h2>
<NodeView.Components.MinimalHeader />
<br />
<p>Ouput:</p>
@output

@code {
    string output = "... gathering metrics ...";
    PeriodicTimer periodicTimer = new (TimeSpan.FromMilliseconds(500));
    protected override Task OnInitializedAsync() {        
       RunTimer();
       return base.OnInitializedAsync();
    }

    public void Dispose()
    {        
        periodicTimer.Dispose();
    }
 
    async void RunTimer()
    {
        while (await periodicTimer.WaitForNextTickAsync()) { 
            var combined_output = new System.Text.StringBuilder();
            if (poller.history != null) {
            var metrics = poller.history.get_raw_metrics();
                foreach (var metric in metrics) {
                    combined_output.AppendLine(metric);
                }                                                                
                if (combined_output.Length > 0) {
                    output = combined_output.ToString();
                } 
            }
            StateHasChanged();
        }    
    }
  
}
      